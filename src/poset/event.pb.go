// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package poset

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import peers "github.com/Fantom-foundation/go-lachesis/src/peers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TransactionType int32

const (
	TransactionType_PEER_ADD    TransactionType = 0
	TransactionType_PEER_REMOVE TransactionType = 1
)

var TransactionType_name = map[int32]string{
	0: "PEER_ADD",
	1: "PEER_REMOVE",
}
var TransactionType_value = map[string]int32{
	"PEER_ADD":    0,
	"PEER_REMOVE": 1,
}

func (x TransactionType) String() string {
	return proto.EnumName(TransactionType_name, int32(x))
}
func (TransactionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type InternalTransaction struct {
	Type TransactionType `protobuf:"varint,1,opt,name=Type,json=type,enum=poset.TransactionType" json:"Type,omitempty"`
	Peer *peers.Peer     `protobuf:"bytes,2,opt,name=peer" json:"peer,omitempty"`
}

func (m *InternalTransaction) Reset()                    { *m = InternalTransaction{} }
func (m *InternalTransaction) String() string            { return proto.CompactTextString(m) }
func (*InternalTransaction) ProtoMessage()               {}
func (*InternalTransaction) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *InternalTransaction) GetType() TransactionType {
	if m != nil {
		return m.Type
	}
	return TransactionType_PEER_ADD
}

func (m *InternalTransaction) GetPeer() *peers.Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type BlockSignature struct {
	Validator []byte `protobuf:"bytes,1,opt,name=Validator,json=validator,proto3" json:"Validator,omitempty"`
	Index     int64  `protobuf:"varint,2,opt,name=Index,json=index" json:"Index,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=Signature,json=signature" json:"Signature,omitempty"`
}

func (m *BlockSignature) Reset()                    { *m = BlockSignature{} }
func (m *BlockSignature) String() string            { return proto.CompactTextString(m) }
func (*BlockSignature) ProtoMessage()               {}
func (*BlockSignature) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *BlockSignature) GetValidator() []byte {
	if m != nil {
		return m.Validator
	}
	return nil
}

func (m *BlockSignature) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *BlockSignature) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type EventBody struct {
	Transactions         [][]byte               `protobuf:"bytes,1,rep,name=Transactions,json=transactions,proto3" json:"Transactions,omitempty"`
	InternalTransactions []*InternalTransaction `protobuf:"bytes,2,rep,name=InternalTransactions,json=internalTransactions" json:"InternalTransactions,omitempty"`
	Parents              []string               `protobuf:"bytes,3,rep,name=Parents,json=parents" json:"Parents,omitempty"`
	Creator              []byte                 `protobuf:"bytes,4,opt,name=Creator,json=creator,proto3" json:"Creator,omitempty"`
	Index                int64                  `protobuf:"varint,5,opt,name=Index,json=index" json:"Index,omitempty"`
	BlockSignatures      []*BlockSignature      `protobuf:"bytes,6,rep,name=BlockSignatures,json=blockSignatures" json:"BlockSignatures,omitempty"`
}

func (m *EventBody) Reset()                    { *m = EventBody{} }
func (m *EventBody) String() string            { return proto.CompactTextString(m) }
func (*EventBody) ProtoMessage()               {}
func (*EventBody) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *EventBody) GetTransactions() [][]byte {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *EventBody) GetInternalTransactions() []*InternalTransaction {
	if m != nil {
		return m.InternalTransactions
	}
	return nil
}

func (m *EventBody) GetParents() []string {
	if m != nil {
		return m.Parents
	}
	return nil
}

func (m *EventBody) GetCreator() []byte {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *EventBody) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *EventBody) GetBlockSignatures() []*BlockSignature {
	if m != nil {
		return m.BlockSignatures
	}
	return nil
}

type EventMessage struct {
	Body                 *EventBody `protobuf:"bytes,1,opt,name=Body,json=body" json:"Body,omitempty"`
	Signature            string     `protobuf:"bytes,2,opt,name=Signature,json=signature" json:"Signature,omitempty"`
	FlagTable            []byte     `protobuf:"bytes,3,opt,name=FlagTable,json=flagTable,proto3" json:"FlagTable,omitempty"`
	WitnessProof         []string   `protobuf:"bytes,4,rep,name=WitnessProof,json=witnessProof" json:"WitnessProof,omitempty"`
	SelfParentIndex      int64      `protobuf:"varint,5,opt,name=SelfParentIndex,json=selfParentIndex" json:"SelfParentIndex,omitempty"`
	OtherParentCreatorID int64      `protobuf:"varint,6,opt,name=OtherParentCreatorID,json=otherParentCreatorID" json:"OtherParentCreatorID,omitempty"`
	OtherParentIndex     int64      `protobuf:"varint,7,opt,name=OtherParentIndex,json=otherParentIndex" json:"OtherParentIndex,omitempty"`
	CreatorID            int64      `protobuf:"varint,8,opt,name=CreatorID,json=creatorID" json:"CreatorID,omitempty"`
	TopologicalIndex     int64      `protobuf:"varint,9,opt,name=TopologicalIndex,json=topologicalIndex" json:"TopologicalIndex,omitempty"`
	Hex                  string     `protobuf:"bytes,10,opt,name=Hex,json=hex" json:"Hex,omitempty"`
	LamportTimestamp     int64      `protobuf:"varint,11,opt,name=LamportTimestamp,json=lamportTimestamp" json:"LamportTimestamp,omitempty"`
	Round                int64      `protobuf:"varint,12,opt,name=Round,json=round" json:"Round,omitempty"`
	RoundReceived        int64      `protobuf:"varint,13,opt,name=RoundReceived,json=roundReceived" json:"RoundReceived,omitempty"`
	Creator              string     `protobuf:"bytes,14,opt,name=Creator,json=creator" json:"Creator,omitempty"`
	Hash                 []byte     `protobuf:"bytes,15,opt,name=Hash,json=hash,proto3" json:"Hash,omitempty"`
}

func (m *EventMessage) Reset()                    { *m = EventMessage{} }
func (m *EventMessage) String() string            { return proto.CompactTextString(m) }
func (*EventMessage) ProtoMessage()               {}
func (*EventMessage) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *EventMessage) GetBody() *EventBody {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *EventMessage) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *EventMessage) GetFlagTable() []byte {
	if m != nil {
		return m.FlagTable
	}
	return nil
}

func (m *EventMessage) GetWitnessProof() []string {
	if m != nil {
		return m.WitnessProof
	}
	return nil
}

func (m *EventMessage) GetSelfParentIndex() int64 {
	if m != nil {
		return m.SelfParentIndex
	}
	return 0
}

func (m *EventMessage) GetOtherParentCreatorID() int64 {
	if m != nil {
		return m.OtherParentCreatorID
	}
	return 0
}

func (m *EventMessage) GetOtherParentIndex() int64 {
	if m != nil {
		return m.OtherParentIndex
	}
	return 0
}

func (m *EventMessage) GetCreatorID() int64 {
	if m != nil {
		return m.CreatorID
	}
	return 0
}

func (m *EventMessage) GetTopologicalIndex() int64 {
	if m != nil {
		return m.TopologicalIndex
	}
	return 0
}

func (m *EventMessage) GetHex() string {
	if m != nil {
		return m.Hex
	}
	return ""
}

func (m *EventMessage) GetLamportTimestamp() int64 {
	if m != nil {
		return m.LamportTimestamp
	}
	return 0
}

func (m *EventMessage) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *EventMessage) GetRoundReceived() int64 {
	if m != nil {
		return m.RoundReceived
	}
	return 0
}

func (m *EventMessage) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *EventMessage) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func init() {
	proto.RegisterType((*InternalTransaction)(nil), "poset.InternalTransaction")
	proto.RegisterType((*BlockSignature)(nil), "poset.BlockSignature")
	proto.RegisterType((*EventBody)(nil), "poset.EventBody")
	proto.RegisterType((*EventMessage)(nil), "poset.EventMessage")
	proto.RegisterEnum("poset.TransactionType", TransactionType_name, TransactionType_value)
}

func init() { proto.RegisterFile("event.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 601 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x94, 0xd1, 0x6b, 0xdb, 0x3e,
	0x10, 0xc7, 0x7f, 0x89, 0x9d, 0xa6, 0x3e, 0xbb, 0x75, 0xd0, 0x2f, 0x1b, 0xa2, 0x0c, 0x16, 0x42,
	0x1f, 0x4c, 0xa1, 0xc9, 0xc8, 0x9e, 0xc7, 0x58, 0xd7, 0x94, 0x16, 0xd6, 0x35, 0xa8, 0xa1, 0x7b,
	0x1c, 0xb2, 0x73, 0xb1, 0xcd, 0x1c, 0xcb, 0x48, 0x6a, 0xd7, 0xfe, 0x0b, 0x7b, 0xda, 0x9f, 0x3c,
	0x24, 0xa7, 0xad, 0x13, 0xf2, 0x12, 0xb8, 0xef, 0xdd, 0x7d, 0x4f, 0xf7, 0x91, 0x15, 0xf0, 0xf1,
	0x01, 0x4b, 0x3d, 0xaa, 0xa4, 0xd0, 0x82, 0x74, 0x2a, 0xa1, 0x50, 0x1f, 0x7d, 0x4a, 0x73, 0x9d,
	0xdd, 0xc7, 0xa3, 0x44, 0xac, 0xc6, 0x17, 0xbc, 0xd4, 0x62, 0x75, 0xba, 0x14, 0xf7, 0xe5, 0x82,
	0xeb, 0x5c, 0x94, 0xe3, 0x54, 0x9c, 0x16, 0x3c, 0xc9, 0x50, 0xe5, 0x6a, 0xac, 0x64, 0x32, 0xae,
	0x10, 0xa5, 0xb2, 0xbf, 0xb5, 0xcb, 0x30, 0x86, 0xff, 0xaf, 0x4a, 0x8d, 0xb2, 0xe4, 0xc5, 0x5c,
	0xf2, 0x52, 0xf1, 0xc4, 0xf4, 0x91, 0x13, 0x70, 0xe7, 0x4f, 0x15, 0xd2, 0xd6, 0xa0, 0x15, 0x1d,
	0x4e, 0xde, 0x8e, 0xec, 0xac, 0x51, 0xa3, 0xc2, 0x64, 0x99, 0xab, 0x9f, 0x2a, 0x24, 0xef, 0xc1,
	0x35, 0x86, 0xb4, 0x3d, 0x68, 0x45, 0xfe, 0xc4, 0x1f, 0xd9, 0x19, 0xa3, 0x19, 0xa2, 0x64, 0x36,
	0x31, 0x8c, 0xe1, 0xf0, 0xac, 0x10, 0xc9, 0xaf, 0xdb, 0x3c, 0x2d, 0xb9, 0xbe, 0x97, 0x48, 0xde,
	0x81, 0x77, 0xc7, 0x8b, 0x7c, 0xc1, 0xb5, 0x90, 0x76, 0x46, 0xc0, 0xbc, 0x87, 0x67, 0x81, 0xf4,
	0xa1, 0x73, 0x55, 0x2e, 0xf0, 0xd1, 0x3a, 0x3a, 0xac, 0x93, 0x9b, 0xc0, 0xf4, 0xbc, 0x18, 0x50,
	0x67, 0xd0, 0x8a, 0x3c, 0xe6, 0xa9, 0x67, 0x61, 0xf8, 0xa7, 0x0d, 0xde, 0xd4, 0xd0, 0x39, 0x13,
	0x8b, 0x27, 0x32, 0x84, 0xa0, 0x71, 0x56, 0x45, 0x5b, 0x03, 0x27, 0x0a, 0x58, 0xa0, 0x1b, 0x1a,
	0xf9, 0x0e, 0xfd, 0x1d, 0x9b, 0x2b, 0xda, 0x1e, 0x38, 0x91, 0x3f, 0x39, 0x5a, 0xaf, 0xbc, 0xa3,
	0x84, 0xf5, 0xf3, 0x1d, 0x7d, 0x84, 0x42, 0x77, 0xc6, 0x25, 0x96, 0x5a, 0x51, 0x67, 0xe0, 0x44,
	0x1e, 0xeb, 0x56, 0x75, 0x68, 0x32, 0x5f, 0x25, 0xda, 0x5d, 0x5d, 0xbb, 0x6b, 0x37, 0xa9, 0xc3,
	0xd7, 0x4d, 0x3b, 0xcd, 0x4d, 0x3f, 0x43, 0xb8, 0xc9, 0x4b, 0xd1, 0x3d, 0x7b, 0xa8, 0x37, 0xeb,
	0x43, 0x6d, 0x66, 0x59, 0x18, 0x6f, 0x56, 0x0f, 0xff, 0xba, 0x10, 0x58, 0x18, 0xd7, 0xa8, 0x14,
	0x4f, 0x91, 0x1c, 0x83, 0x6b, 0xb8, 0x58, 0xd4, 0xfe, 0xa4, 0xb7, 0xb6, 0x79, 0xe1, 0xc5, 0xdc,
	0xd8, 0x50, 0xdb, 0x20, 0xdc, 0xde, 0x22, 0x6c, 0xb2, 0x17, 0x05, 0x4f, 0xe7, 0x3c, 0x2e, 0x6a,
	0xfe, 0x01, 0xf3, 0x96, 0xcf, 0x82, 0x21, 0xfe, 0x23, 0xd7, 0x25, 0x2a, 0x35, 0x93, 0x42, 0x2c,
	0xa9, 0x6b, 0x11, 0x04, 0xbf, 0x1b, 0x1a, 0x89, 0x20, 0xbc, 0xc5, 0x62, 0x59, 0x53, 0x6a, 0xee,
	0x1d, 0xaa, 0x4d, 0x99, 0x4c, 0xa0, 0x7f, 0xa3, 0x33, 0x94, 0xb5, 0xb6, 0x86, 0x77, 0x75, 0x4e,
	0xf7, 0x6c, 0x79, 0x5f, 0xec, 0xc8, 0x91, 0x13, 0xe8, 0x35, 0x7a, 0x6a, 0xfb, 0xae, 0xad, 0xef,
	0x89, 0x2d, 0xdd, 0xec, 0xf2, 0x6a, 0xba, 0x6f, 0x8b, 0xbc, 0xa4, 0xe9, 0x34, 0x17, 0x95, 0x28,
	0x44, 0x9a, 0x27, 0xbc, 0xa8, 0x9d, 0xbc, 0xda, 0x49, 0x6f, 0xe9, 0xa4, 0x07, 0xce, 0x25, 0x3e,
	0x52, 0xb0, 0xb4, 0x9c, 0x0c, 0x1f, 0x4d, 0xf7, 0x37, 0xbe, 0xaa, 0x84, 0xd4, 0xf3, 0x7c, 0x85,
	0x4a, 0xf3, 0x55, 0x45, 0xfd, 0xba, 0xbb, 0xd8, 0xd2, 0xcd, 0xfd, 0x33, 0xf3, 0x58, 0x69, 0x50,
	0xdf, 0xbf, 0x34, 0x01, 0x39, 0x86, 0x03, 0xab, 0x32, 0x4c, 0x30, 0x7f, 0xc0, 0x05, 0x3d, 0xb0,
	0xd9, 0x03, 0xd9, 0x14, 0x9b, 0x5f, 0xd5, 0xa1, 0x9d, 0xfe, 0xf2, 0x55, 0x11, 0x70, 0x2f, 0xb9,
	0xca, 0x68, 0x68, 0x2f, 0xc9, 0xcd, 0xb8, 0xca, 0x4e, 0x3e, 0x40, 0xb8, 0xf5, 0x7a, 0x49, 0x00,
	0xfb, 0xb3, 0xe9, 0x94, 0xfd, 0xfc, 0x72, 0x7e, 0xde, 0xfb, 0x8f, 0x84, 0xe0, 0xdb, 0x88, 0x4d,
	0xaf, 0x6f, 0xee, 0xa6, 0xbd, 0x56, 0xbc, 0x67, 0xff, 0x20, 0x3e, 0xfe, 0x0b, 0x00, 0x00, 0xff,
	0xff, 0xd4, 0xc4, 0xee, 0xd8, 0x75, 0x04, 0x00, 0x00,
}
